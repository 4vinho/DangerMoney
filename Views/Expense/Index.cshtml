@model PagedResponse<IEnumerable<ExpenseDTO>>
@{
    ViewData["Title"] = "Despesas do Mês";
    var query = Context.Request.Query;
    var currentPage = int.TryParse(query["PageCount"], out var p) ? p : 1;
    var pageSize = int.TryParse(query["PageSize"], out var s) ? s : 10;
    var totalPages = Model.TotalPages;
}

<h2 class="mb-4">@ViewData["Title"]</h2>

<div class="d-flex justify-content-between align-items-center mb-4">
    <form method="get" asp-action="Index" class="row g-2 align-items-center">
        <div class="col-auto">
            <label for="pageSizeSelect" class="col-form-label">Itens por página:</label>
        </div>
        <div class="col-auto">
            <select id="pageSizeSelect" name="PageSize" class="form-select" onchange="this.form.submit()">
                <option value="5" selected="@(pageSize == 5)">5</option>
                <option value="10" selected="@(pageSize == 10)">10</option>
                <option value="20" selected="@(pageSize == 20)">20</option>
                <option value="50" selected="@(pageSize == 50)">50</option>
            </select>
        </div>
        <input type="hidden" name="PageCount" value="@currentPage" />
    </form>
    <a asp-action="Create" class="btn btn-success">+ Nova Despesa</a>
</div>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}
else if (Model.Data == null || !Model.Data.Any())
{
    <div class="alert alert-info">Nenhuma despesa encontrada.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Nome</th>
                    <th>Valor</th>
                    <th>Data</th>
                    <th>Tipo</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Data)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Amount.ToString("C")</td>
                        <td>@item.Date.ToString("dd/MM/yyyy")</td>
                        <td>@item.Type</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Editar</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Excluir</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageCount="@(currentPage - 1)" asp-route-pageSize="@pageSize">Anterior</a>
            </li>
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageCount="@i" asp-route-pageSize="@pageSize">@i</a>
                </li>
            }
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageCount="@(currentPage + 1)" asp-route-pageSize="@pageSize">Próxima</a>
            </li>
        </ul>
    </nav>

    <div class="text-center mt-3">
        Página @currentPage de @totalPages | Total de itens: @Model.TotalItems
    </div>
}